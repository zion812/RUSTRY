# generated/phase1/ci/phase1.yml
name: Phase 1 - Auth & Navigation Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'app/src/main/java/com/rio/rustry/auth/**'
      - 'app/src/main/java/com/rio/rustry/navigation/**'
      - 'app/src/main/java/com/rio/rustry/di/Phase1Module.kt'
      - 'app/src/main/java/com/rio/rustry/ui/theme/Consent*.kt'
      - 'app/src/test/java/com/rio/rustry/auth/**'
      - 'app/src/test/java/com/rio/rustry/navigation/**'
      - 'app/src/androidTest/java/com/rio/rustry/navigation/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'app/src/main/java/com/rio/rustry/auth/**'
      - 'app/src/main/java/com/rio/rustry/navigation/**'
      - 'app/src/main/java/com/rio/rustry/di/Phase1Module.kt'
      - 'app/src/main/java/com/rio/rustry/ui/theme/Consent*.kt'
      - 'app/src/test/java/com/rio/rustry/auth/**'
      - 'app/src/test/java/com/rio/rustry/navigation/**'
      - 'app/src/androidTest/java/com/rio/rustry/navigation/**'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run unit tests
      run: ./gradlew testDebugUnitTest --continue
      
    - name: Generate test report
      run: ./gradlew jacocoTestReport
      
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: unit-test-results
        path: |
          app/build/reports/tests/testDebugUnitTest/
          app/build/reports/jacoco/jacocoTestReport/
          
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  instrumented-tests:
    name: Instrumented Tests
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: AVD cache
      uses: actions/cache@v3
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-29
        
    - name: Create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."
        
    - name: Run instrumented tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: ./gradlew connectedDebugAndroidTest --continue
        
    - name: Upload instrumented test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: instrumented-test-results
        path: app/build/reports/androidTests/connected/

  lint-and-detekt:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run Android Lint
      run: ./gradlew lintDebug
      
    - name: Run Detekt
      run: ./gradlew detekt
      continue-on-error: true
      
    - name: Upload lint results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: lint-results
        path: |
          app/build/reports/lint-results-debug.html
          app/build/reports/detekt/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  phase1-validation:
    name: Phase 1 Validation
    runs-on: ubuntu-latest
    needs: [unit-tests, instrumented-tests, lint-and-detekt]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Validate Phase 1 Components
      run: |
        echo "Validating Phase 1 implementation..."
        
        # Check if all required files exist
        echo "Checking required files..."
        test -f "app/src/main/java/com/rio/rustry/auth/RoleManager.kt" || exit 1
        test -f "app/src/main/java/com/rio/rustry/auth/GdprConsentManager.kt" || exit 1
        test -f "app/src/main/java/com/rio/rustry/navigation/BottomNavConfig.kt" || exit 1
        test -f "app/src/main/java/com/rio/rustry/navigation/DynamicBottomBar.kt" || exit 1
        test -f "app/src/main/java/com/rio/rustry/di/Phase1Module.kt" || exit 1
        
        # Check if tests exist
        echo "Checking test files..."
        test -f "app/src/test/java/com/rio/rustry/auth/RoleManagerTest.kt" || exit 1
        test -f "app/src/test/java/com/rio/rustry/auth/GdprConsentManagerTest.kt" || exit 1
        test -f "app/src/test/java/com/rio/rustry/navigation/BottomNavConfigTest.kt" || exit 1
        test -f "app/src/androidTest/java/com/rio/rustry/navigation/NavigationFlowTest.kt" || exit 1
        
        echo "âœ… All Phase 1 files present"
        
    - name: Build Phase 1 Components
      run: |
        echo "Building Phase 1 components..."
        ./gradlew assembleDebug
        echo "âœ… Phase 1 build successful"
        
    - name: Verify GDPR Compliance
      run: |
        echo "Verifying GDPR compliance implementation..."
        
        # Check for required GDPR components
        grep -q "gdprConsent" app/src/main/java/com/rio/rustry/auth/EnhancedUser.kt || exit 1
        grep -q "dataDeletionRequested" app/src/main/java/com/rio/rustry/auth/EnhancedUser.kt || exit 1
        grep -q "recordConsent" app/src/main/java/com/rio/rustry/auth/GdprConsentManager.kt || exit 1
        grep -q "requestDeletion" app/src/main/java/com/rio/rustry/auth/GdprConsentManager.kt || exit 1
        grep -q "PRIVACY_POLICY_URL" app/src/main/java/com/rio/rustry/auth/GdprConsentManager.kt || exit 1
        
        echo "âœ… GDPR compliance verified"
        
    - name: Verify Navigation Implementation
      run: |
        echo "Verifying navigation implementation..."
        
        # Check for role-based navigation
        grep -q "EnhancedUserType.GENERAL" app/src/main/java/com/rio/rustry/navigation/BottomNavConfig.kt || exit 1
        grep -q "EnhancedUserType.FARMER" app/src/main/java/com/rio/rustry/navigation/BottomNavConfig.kt || exit 1
        grep -q "EnhancedUserType.HIGH_LEVEL" app/src/main/java/com/rio/rustry/navigation/BottomNavConfig.kt || exit 1
        
        # Check for type-safe routes
        grep -q "sealed class NavigationRoute" app/src/main/java/com/rio/rustry/navigation/BottomNavConfig.kt || exit 1
        
        echo "âœ… Navigation implementation verified"
        
    - name: Phase 1 Complete
      run: |
        echo "ðŸŽ‰ Phase 1 validation complete!"
        echo "âœ… Authentication enhancements implemented"
        echo "âœ… GDPR compliance implemented"
        echo "âœ… Dynamic navigation implemented"
        echo "âœ… Comprehensive testing implemented"
        echo "âœ… CI/CD pipeline configured"
        echo ""
        echo "PHASE1_COMPLETE"