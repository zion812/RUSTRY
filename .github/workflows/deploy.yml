name: Release Build

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: 'v1.0.0-rc1'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Decode Keystore
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > release.keystore
      if: ${{ secrets.KEYSTORE_BASE64 }}
      
    - name: Create keystore.properties
      run: |
        echo "storeFile=../release.keystore" > keystore.properties
        echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> keystore.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> keystore.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> keystore.properties
      if: ${{ secrets.KEYSTORE_PASSWORD }}
      
    - name: Build Debug APK (fallback)
      run: ./gradlew assembleDebug
      if: ${{ !secrets.KEYSTORE_BASE64 }}
      
    - name: Build Release AAB
      run: ./gradlew bundleRelease
      if: ${{ secrets.KEYSTORE_BASE64 }}
      
    - name: Build Release APK
      run: ./gradlew assembleRelease
      if: ${{ secrets.KEYSTORE_BASE64 }}
      
    - name: Upload Release AAB
      uses: actions/upload-artifact@v3
      with:
        name: release-aab
        path: app/build/outputs/bundle/release/app-release.aab
      if: ${{ secrets.KEYSTORE_BASE64 }}
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v3
      with:
        name: release-apk
        path: app/build/outputs/apk/release/app-release.apk
      if: ${{ secrets.KEYSTORE_BASE64 }}
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v3
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
      if: ${{ !secrets.KEYSTORE_BASE64 }}
        
    - name: Upload Mapping File
      uses: actions/upload-artifact@v3
      with:
        name: mapping-file
        path: app/build/outputs/mapping/release/mapping.txt
      if: ${{ secrets.KEYSTORE_BASE64 }}
        
    # Uncomment when ready for Play Store deployment
    # - name: Upload to Play Store
    #   uses: r0adkll/upload-google-play@v1
    #   with:
    #     serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SA }}
    #     packageName: com.rio.rustry
    #     releaseFiles: app/build/outputs/bundle/release/app-release.aab
    #     track: internal
    #   if: ${{ secrets.GOOGLE_PLAY_SA }}